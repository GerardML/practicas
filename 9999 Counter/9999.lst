CCS PCM C Compiler, Version 5.015, 5967               18-mar.-21 21:08

               Filename:   C:\Users\GerardML\Documents\Estudio\Prueba Codigo C\9999 Counter\9999.lst

               ROM used:   238 words (3%)
                           Largest free fragment is 2048
               RAM used:   27 (7%) at main() level
                           33 (9%) worst case
               Stack used: 5 locations (2 in main + 3 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   084
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   07C
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #use delay(clock=4M) 
002F:  MOVLW  3B
0030:  MOVWF  04
0031:  BCF    03.7
0032:  MOVF   00,W
0033:  BTFSC  03.2
0034:  GOTO   043
0035:  MOVLW  01
0036:  MOVWF  78
0037:  CLRF   77
0038:  DECFSZ 77,F
0039:  GOTO   038
003A:  DECFSZ 78,F
003B:  GOTO   037
003C:  MOVLW  4A
003D:  MOVWF  77
003E:  DECFSZ 77,F
003F:  GOTO   03E
0040:  GOTO   041
0041:  DECFSZ 00,F
0042:  GOTO   035
0043:  RETURN
.................... #FUSES xt,noprotect,nowdt 
.................... #use fast_io(B) 
.................... #use fast_io(C) 
.................... #byte portb   = 0x06 
.................... #byte portc   = 0x07 
.................... #byte display = 0x08 
.................... #bit  pulse   = 0x07.0 
.................... #bit  uni     = 0x07.1 
.................... #bit  dec     = 0x07.2 
.................... #bit  cen     = 0x07.3 
.................... #bit  uMill   = 0x07.4 
....................  
.................... int8 numDisp[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0xfc,0x47,255,0x67}; 
*
0093:  MOVLW  3F
0094:  BCF    03.5
0095:  MOVWF  28
0096:  MOVLW  06
0097:  MOVWF  29
0098:  MOVLW  5B
0099:  MOVWF  2A
009A:  MOVLW  4F
009B:  MOVWF  2B
009C:  MOVLW  66
009D:  MOVWF  2C
009E:  MOVLW  6D
009F:  MOVWF  2D
00A0:  MOVLW  FC
00A1:  MOVWF  2E
00A2:  MOVLW  47
00A3:  MOVWF  2F
00A4:  MOVLW  FF
00A5:  MOVWF  30
00A6:  MOVLW  67
00A7:  MOVWF  31
.................... int c=0,c2=0,c3=0,c4=0; 
....................  
.................... void conteo(); 
....................  
.................... #int_ext 
....................  
.................... void ext(){ 
....................    while(!input(pin_b0)){ 
*
007C:  BTFSC  06.0
007D:  GOTO   080
....................       conteo(); 
007E:  CALL   044
007F:  GOTO   07C
....................    } 
....................    //portb=0x00; 
0080:  BCF    0B.1
0081:  BCF    0A.3
0082:  BCF    0A.4
0083:  GOTO   01B
.................... } 
....................  
.................... void conteo(){ 
....................  
....................    uMill = 0; 
*
0044:  BCF    07.4
....................    cen   = 1; 
0045:  BSF    07.3
....................    dec   = 1; 
0046:  BSF    07.2
....................    uni   = 1; 
0047:  BSF    07.1
....................    display=numDisp[c4]; 
0048:  MOVLW  28
0049:  ADDWF  35,W
004A:  MOVWF  04
004B:  BCF    03.7
004C:  MOVF   00,W
004D:  MOVWF  08
....................    delay_ms(1); 
004E:  MOVLW  01
004F:  MOVWF  3B
0050:  CALL   02F
....................    
....................    uMill = 1; 
0051:  BSF    07.4
....................    cen   = 0; 
0052:  BCF    07.3
....................    dec   = 1; 
0053:  BSF    07.2
....................    uni   = 1; 
0054:  BSF    07.1
....................    display=numDisp[c3]; 
0055:  MOVLW  28
0056:  ADDWF  34,W
0057:  MOVWF  04
0058:  BCF    03.7
0059:  MOVF   00,W
005A:  MOVWF  08
....................    delay_ms(1); 
005B:  MOVLW  01
005C:  MOVWF  3B
005D:  CALL   02F
....................     
....................    uMill = 1; 
005E:  BSF    07.4
....................    cen   = 1; 
005F:  BSF    07.3
....................    dec   = 0; 
0060:  BCF    07.2
....................    uni   = 1; 
0061:  BSF    07.1
....................    display=numDisp[c]; 
0062:  MOVLW  28
0063:  ADDWF  32,W
0064:  MOVWF  04
0065:  BCF    03.7
0066:  MOVF   00,W
0067:  MOVWF  08
....................    delay_ms(1); 
0068:  MOVLW  01
0069:  MOVWF  3B
006A:  CALL   02F
....................     
....................    uMill = 1; 
006B:  BSF    07.4
....................    cen   = 1; 
006C:  BSF    07.3
....................    dec   = 1; 
006D:  BSF    07.2
....................    uni   = 0; 
006E:  BCF    07.1
....................    display=numDisp[c2]; 
006F:  MOVLW  28
0070:  ADDWF  33,W
0071:  MOVWF  04
0072:  BCF    03.7
0073:  MOVF   00,W
0074:  MOVWF  08
....................    delay_ms(1); 
0075:  MOVLW  01
0076:  MOVWF  3B
0077:  CALL   02F
....................     
....................    delay_ms(40); 
0078:  MOVLW  28
0079:  MOVWF  3B
007A:  CALL   02F
007B:  RETURN
.................... } 
....................  
....................  
.................... void main(){ 
*
0084:  MOVF   03,W
0085:  ANDLW  1F
0086:  MOVWF  03
0087:  CLRF   32
0088:  CLRF   33
0089:  CLRF   34
008A:  CLRF   35
008B:  BSF    03.5
008C:  BSF    1F.0
008D:  BSF    1F.1
008E:  BSF    1F.2
008F:  BCF    1F.3
0090:  MOVLW  07
0091:  MOVWF  1C
0092:  BCF    03.7
....................    enable_interrupts(int_ext); 
*
00A8:  BSF    0B.4
....................    enable_interrupts(global); 
00A9:  MOVLW  C0
00AA:  IORWF  0B,F
....................    ext_int_edge(H_TO_L); 
00AB:  BSF    03.5
00AC:  BCF    01.6
....................    int globa=0; 
....................    int globa2=0; 
....................    int globa3=0; 
....................    int globa4=0; 
00AD:  BCF    03.5
00AE:  CLRF   36
00AF:  CLRF   37
00B0:  CLRF   38
00B1:  CLRF   39
....................     
....................    set_tris_b(0x01); 
00B2:  MOVLW  01
00B3:  BSF    03.5
00B4:  MOVWF  06
....................    set_tris_c(0xE1); 
00B5:  MOVLW  E1
00B6:  MOVWF  07
....................    set_tris_d(0x00); 
00B7:  MOVLW  00
00B8:  MOVWF  08
....................    display=numDisp[c]; 
00B9:  MOVLW  28
00BA:  BCF    03.5
00BB:  ADDWF  32,W
00BC:  MOVWF  04
00BD:  BCF    03.7
00BE:  MOVF   00,W
00BF:  MOVWF  08
....................    portb=0x00; 
00C0:  CLRF   06
....................     
....................    for(;;){ 
....................          for(globa4=0;globa4<=9;globa4++){ 
00C1:  CLRF   39
00C2:  MOVF   39,W
00C3:  SUBLW  09
00C4:  BTFSS  03.0
00C5:  GOTO   0EB
....................                    
....................                   c3=0; 
00C6:  CLRF   34
....................                    
....................                   for(globa3=0;globa3<=9;globa3++){ 
00C7:  CLRF   38
00C8:  MOVF   38,W
00C9:  SUBLW  09
00CA:  BTFSS  03.0
00CB:  GOTO   0E8
....................                          
....................                         c=0; 
00CC:  CLRF   32
....................                          
....................                         for(globa=0;globa<=9;globa++){ 
00CD:  CLRF   36
00CE:  MOVF   36,W
00CF:  SUBLW  09
00D0:  BTFSS  03.0
00D1:  GOTO   0E5
....................                             
....................                            c2=0; 
00D2:  CLRF   33
....................                             
....................                            for(globa2=0;globa2<=9;globa2++){ 
00D3:  CLRF   37
00D4:  MOVF   37,W
00D5:  SUBLW  09
00D6:  BTFSS  03.0
00D7:  GOTO   0E2
00D8:  CLRF   27
00D9:  BTFSC  0B.7
00DA:  BSF    27.7
00DB:  BCF    0B.7
....................                             
....................                               conteo(); 
00DC:  CALL   044
00DD:  BTFSC  27.7
00DE:  BSF    0B.7
....................                               c2++; 
00DF:  INCF   33,F
00E0:  INCF   37,F
00E1:  GOTO   0D4
....................                            } 
....................                            c++; 
00E2:  INCF   32,F
00E3:  INCF   36,F
00E4:  GOTO   0CE
....................                         } 
....................                         c3++; 
00E5:  INCF   34,F
00E6:  INCF   38,F
00E7:  GOTO   0C8
....................                   } 
....................                   c4++; 
00E8:  INCF   35,F
00E9:  INCF   39,F
00EA:  GOTO   0C2
....................          } 
....................          c4=0; 
00EB:  CLRF   35
00EC:  GOTO   0C1
....................       } 
.................... } 
00ED:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
