CCS PCM C Compiler, Version 4.104, 5967               10-feb.-21 17:44

               Filename: C:\Users\GerardML\Documents\Estudio\Prueba Codigo C\Interrupcion TIMER0\TIMER0.lst

               ROM used: 123 words (2%)
                         Largest free fragment is 2048
               RAM used: 13 (4%) at main() level
                         14 (4%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04F
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
*
003A:  MOVLW  28
003B:  MOVWF  04
003C:  BCF    03.7
003D:  MOVF   00,W
003E:  BTFSC  03.2
003F:  GOTO   04E
0040:  MOVLW  01
0041:  MOVWF  78
0042:  CLRF   77
0043:  DECFSZ 77,F
0044:  GOTO   043
0045:  DECFSZ 78,F
0046:  GOTO   042
0047:  MOVLW  4A
0048:  MOVWF  77
0049:  DECFSZ 77,F
004A:  GOTO   049
004B:  GOTO   04C
004C:  DECFSZ 00,F
004D:  GOTO   040
004E:  RETURN
.................... #fuses xt,nowdt,noprotect,noput 
.................... #use standard_io (b) 
.................... #byte salida=0x06       //ultrb= 
....................  
.................... #INT_TIMER0  //Interrupción por B0 
....................  
.................... void interrupcion(){ 
....................    output_toggle(pin_b1); 
*
002F:  BSF    03.5
0030:  BCF    06.1
0031:  MOVLW  02
0032:  BCF    03.5
0033:  XORWF  06,F
....................    set_timer0(6); 
0034:  MOVLW  06
0035:  MOVWF  01
.................... } 
....................  
....................  
0036:  BCF    0B.2
0037:  BCF    0A.3
0038:  BCF    0A.4
0039:  GOTO   01B
.................... void main(){ 
*
004F:  CLRF   04
0050:  BCF    03.7
0051:  MOVLW  1F
0052:  ANDWF  03,F
0053:  BSF    03.5
0054:  BSF    1F.0
0055:  BSF    1F.1
0056:  BSF    1F.2
0057:  BCF    1F.3
0058:  MOVLW  07
0059:  MOVWF  1C
....................    setup_timer_0 (rtcc_div_2 | rtcc_internal); 
005A:  MOVF   01,W
005B:  ANDLW  C0
005C:  MOVWF  01
....................    enable_interrupts(int_timer0); 
005D:  BCF    03.5
005E:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
005F:  MOVLW  C0
0060:  IORWF  0B,F
....................    set_timer0(6); 
0061:  MOVLW  06
0062:  MOVWF  01
....................    set_tris_b(0x81); 
0063:  MOVLW  81
0064:  BSF    03.5
0065:  MOVWF  06
....................    salida=0x00; 
0066:  BCF    03.5
0067:  CLRF   06
....................     
....................    for(;;){ 
....................       salida=(0xFF); 
0068:  MOVLW  FF
0069:  MOVWF  06
....................       delay_ms(730); 
006A:  MOVLW  05
006B:  MOVWF  27
006C:  MOVLW  92
006D:  MOVWF  28
006E:  CALL   03A
006F:  DECFSZ 27,F
0070:  GOTO   06C
....................       salida=(0x00); 
0071:  CLRF   06
....................       delay_ms(730); 
0072:  MOVLW  05
0073:  MOVWF  27
0074:  MOVLW  92
0075:  MOVWF  28
0076:  CALL   03A
0077:  DECFSZ 27,F
0078:  GOTO   074
....................    } 
0079:  GOTO   068
.................... } 
....................  
....................  
007A:  SLEEP

Configuration Fuses:
   Word  1: 3F79   XT NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
