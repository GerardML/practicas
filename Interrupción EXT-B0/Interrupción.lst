CCS PCM C Compiler, Version 4.104, 5967               10-feb.-21 17:26

               Filename: C:\Users\GerardML\Documents\Estudio\Prueba Codigo C\Interrupción EXT-B0\Interrupción.lst

               ROM used: 383 words (5%)
                         Largest free fragment is 2048
               RAM used: 22 (6%) at main() level
                         22 (6%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   144
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
.................... #fuses xt,nowdt,noprotect,noput 
.................... #use fast_io (a) 
.................... #use fast_io (b) 
.................... #byte entrada=0x05     //Porta=llantas 
.................... #byte salida=0x06       //ultrb= 
.................... ////////////////////////////////////ENTRADAS//////////////////////////////////// 
.................... //////1 BOTON COMIENZO////////// 
.................... //////4 SENSORES INFRAROJOS///// 
.................... //////5 SENSORES ULTRASONICOS/// 
.................... ////////////////////////////////////SALIDAS///////////////////////////////////// 
.................... //////4 CONTROLADORES PARA 2 MOTORES/////// 
.................... //////////////////////////////////////////////////////////////////////////////// 
.................... //ASIGNACIÓN DE PINES DE ENTRADA: RB0 -> RB7 + D7, D6, D5, D4 
.................... //ASIGNACIÓN DE PINES  DE SALIDA: RA0 -> RA3 
....................  
.................... ///////////Asignación de etiquetas/nombres a los comandos Hexa//////////////////    
.................... int calibrar=6,iniciar=1,medir=2; 
.................... int c=3,i=4,m=5,x=0; 
.................... int menus=0,seleccion=0; 
....................  
.................... #INT_EXT  //Interrupción por B0 
....................  
.................... void interrupcion(){ 
....................    x++; 
002F:  INCF   2D,F
....................       if(x==1){ 
0030:  DECFSZ 2D,W
0031:  GOTO   034
....................       salida=0xFF;} 
0032:  MOVLW  FF
0033:  MOVWF  06
....................       if(x==2){ 
0034:  MOVF   2D,W
0035:  SUBLW  02
0036:  BTFSS  03.2
0037:  GOTO   03A
....................       salida=0x00; 
0038:  CLRF   06
....................       x=0;} 
0039:  CLRF   2D
.................... } 
....................  
....................  
003A:  BCF    0B.1
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   01B
.................... void menu(){ 
....................    switch(menus){ 
003E:  MOVF   2E,W
003F:  XORLW  01
0040:  BTFSC  03.2
0041:  GOTO   049
0042:  XORLW  03
0043:  BTFSC  03.2
0044:  GOTO   070
0045:  XORLW  01
0046:  BTFSC  03.2
0047:  GOTO   097
0048:  GOTO   0BE
....................          case 1:{ 
....................             //salida=calibrar; 
....................             bit_set(salida,calibrar); 
0049:  MOVLW  01
004A:  MOVWF  77
004B:  MOVF   27,W
004C:  MOVWF  78
004D:  BTFSC  03.2
004E:  GOTO   053
004F:  BCF    03.0
0050:  RLF    77,F
0051:  DECFSZ 78,F
0052:  GOTO   04F
0053:  MOVF   77,W
0054:  IORWF  06,F
....................             bit_clear(salida,iniciar); 
0055:  MOVLW  01
0056:  MOVWF  77
0057:  MOVF   28,W
0058:  MOVWF  78
0059:  BTFSC  03.2
005A:  GOTO   05F
005B:  BCF    03.0
005C:  RLF    77,F
005D:  DECFSZ 78,F
005E:  GOTO   05B
005F:  MOVF   77,W
0060:  XORLW  FF
0061:  ANDWF  06,F
....................             bit_clear(salida,medir); 
0062:  MOVLW  01
0063:  MOVWF  77
0064:  MOVF   29,W
0065:  MOVWF  78
0066:  BTFSC  03.2
0067:  GOTO   06C
0068:  BCF    03.0
0069:  RLF    77,F
006A:  DECFSZ 78,F
006B:  GOTO   068
006C:  MOVF   77,W
006D:  XORLW  FF
006E:  ANDWF  06,F
....................          break; 
006F:  GOTO   0BE
....................          } 
....................          case 2:{ 
....................             //salida=iniciar; 
....................             bit_set(salida,iniciar); 
0070:  MOVLW  01
0071:  MOVWF  77
0072:  MOVF   28,W
0073:  MOVWF  78
0074:  BTFSC  03.2
0075:  GOTO   07A
0076:  BCF    03.0
0077:  RLF    77,F
0078:  DECFSZ 78,F
0079:  GOTO   076
007A:  MOVF   77,W
007B:  IORWF  06,F
....................             bit_clear(salida,calibrar); 
007C:  MOVLW  01
007D:  MOVWF  77
007E:  MOVF   27,W
007F:  MOVWF  78
0080:  BTFSC  03.2
0081:  GOTO   086
0082:  BCF    03.0
0083:  RLF    77,F
0084:  DECFSZ 78,F
0085:  GOTO   082
0086:  MOVF   77,W
0087:  XORLW  FF
0088:  ANDWF  06,F
....................             bit_clear(salida,medir); 
0089:  MOVLW  01
008A:  MOVWF  77
008B:  MOVF   29,W
008C:  MOVWF  78
008D:  BTFSC  03.2
008E:  GOTO   093
008F:  BCF    03.0
0090:  RLF    77,F
0091:  DECFSZ 78,F
0092:  GOTO   08F
0093:  MOVF   77,W
0094:  XORLW  FF
0095:  ANDWF  06,F
....................          break; 
0096:  GOTO   0BE
....................          } 
....................          case 3:{ 
....................             //salida=medir; 
....................             bit_set(salida,medir); 
0097:  MOVLW  01
0098:  MOVWF  77
0099:  MOVF   29,W
009A:  MOVWF  78
009B:  BTFSC  03.2
009C:  GOTO   0A1
009D:  BCF    03.0
009E:  RLF    77,F
009F:  DECFSZ 78,F
00A0:  GOTO   09D
00A1:  MOVF   77,W
00A2:  IORWF  06,F
....................             bit_clear(salida,calibrar); 
00A3:  MOVLW  01
00A4:  MOVWF  77
00A5:  MOVF   27,W
00A6:  MOVWF  78
00A7:  BTFSC  03.2
00A8:  GOTO   0AD
00A9:  BCF    03.0
00AA:  RLF    77,F
00AB:  DECFSZ 78,F
00AC:  GOTO   0A9
00AD:  MOVF   77,W
00AE:  XORLW  FF
00AF:  ANDWF  06,F
....................             bit_clear(salida,iniciar); 
00B0:  MOVLW  01
00B1:  MOVWF  77
00B2:  MOVF   28,W
00B3:  MOVWF  78
00B4:  BTFSC  03.2
00B5:  GOTO   0BA
00B6:  BCF    03.0
00B7:  RLF    77,F
00B8:  DECFSZ 78,F
00B9:  GOTO   0B6
00BA:  MOVF   77,W
00BB:  XORLW  FF
00BC:  ANDWF  06,F
....................          break; 
00BD:  GOTO   0BE
....................          } 
....................       } 
.................... } 
00BE:  BCF    0A.3
00BF:  BCF    0A.4
00C0:  GOTO   178 (RETURN)
....................  
.................... void seleccion(){ 
....................       switch(menus){ 
00C1:  MOVF   2E,W
00C2:  XORLW  01
00C3:  BTFSC  03.2
00C4:  GOTO   0CC
00C5:  XORLW  03
00C6:  BTFSC  03.2
00C7:  GOTO   0F3
00C8:  XORLW  01
00C9:  BTFSC  03.2
00CA:  GOTO   11A
00CB:  GOTO   141
....................          case 1:{ 
....................             bit_set(salida,c); 
00CC:  MOVLW  01
00CD:  MOVWF  77
00CE:  MOVF   2A,W
00CF:  MOVWF  78
00D0:  BTFSC  03.2
00D1:  GOTO   0D6
00D2:  BCF    03.0
00D3:  RLF    77,F
00D4:  DECFSZ 78,F
00D5:  GOTO   0D2
00D6:  MOVF   77,W
00D7:  IORWF  06,F
....................             bit_clear(salida,i); 
00D8:  MOVLW  01
00D9:  MOVWF  77
00DA:  MOVF   2B,W
00DB:  MOVWF  78
00DC:  BTFSC  03.2
00DD:  GOTO   0E2
00DE:  BCF    03.0
00DF:  RLF    77,F
00E0:  DECFSZ 78,F
00E1:  GOTO   0DE
00E2:  MOVF   77,W
00E3:  XORLW  FF
00E4:  ANDWF  06,F
....................             bit_clear(salida,m); 
00E5:  MOVLW  01
00E6:  MOVWF  77
00E7:  MOVF   2C,W
00E8:  MOVWF  78
00E9:  BTFSC  03.2
00EA:  GOTO   0EF
00EB:  BCF    03.0
00EC:  RLF    77,F
00ED:  DECFSZ 78,F
00EE:  GOTO   0EB
00EF:  MOVF   77,W
00F0:  XORLW  FF
00F1:  ANDWF  06,F
....................          break; 
00F2:  GOTO   141
....................          } 
....................          case 2:{ 
....................             bit_set(salida,i); 
00F3:  MOVLW  01
00F4:  MOVWF  77
00F5:  MOVF   2B,W
00F6:  MOVWF  78
00F7:  BTFSC  03.2
00F8:  GOTO   0FD
00F9:  BCF    03.0
00FA:  RLF    77,F
00FB:  DECFSZ 78,F
00FC:  GOTO   0F9
00FD:  MOVF   77,W
00FE:  IORWF  06,F
....................             bit_clear(salida,c); 
00FF:  MOVLW  01
0100:  MOVWF  77
0101:  MOVF   2A,W
0102:  MOVWF  78
0103:  BTFSC  03.2
0104:  GOTO   109
0105:  BCF    03.0
0106:  RLF    77,F
0107:  DECFSZ 78,F
0108:  GOTO   105
0109:  MOVF   77,W
010A:  XORLW  FF
010B:  ANDWF  06,F
....................             bit_clear(salida,m); 
010C:  MOVLW  01
010D:  MOVWF  77
010E:  MOVF   2C,W
010F:  MOVWF  78
0110:  BTFSC  03.2
0111:  GOTO   116
0112:  BCF    03.0
0113:  RLF    77,F
0114:  DECFSZ 78,F
0115:  GOTO   112
0116:  MOVF   77,W
0117:  XORLW  FF
0118:  ANDWF  06,F
....................          break; 
0119:  GOTO   141
....................          } 
....................          case 3:{ 
....................             bit_set(salida,m); 
011A:  MOVLW  01
011B:  MOVWF  77
011C:  MOVF   2C,W
011D:  MOVWF  78
011E:  BTFSC  03.2
011F:  GOTO   124
0120:  BCF    03.0
0121:  RLF    77,F
0122:  DECFSZ 78,F
0123:  GOTO   120
0124:  MOVF   77,W
0125:  IORWF  06,F
....................             bit_clear(salida,i); 
0126:  MOVLW  01
0127:  MOVWF  77
0128:  MOVF   2B,W
0129:  MOVWF  78
012A:  BTFSC  03.2
012B:  GOTO   130
012C:  BCF    03.0
012D:  RLF    77,F
012E:  DECFSZ 78,F
012F:  GOTO   12C
0130:  MOVF   77,W
0131:  XORLW  FF
0132:  ANDWF  06,F
....................             bit_clear(salida,c); 
0133:  MOVLW  01
0134:  MOVWF  77
0135:  MOVF   2A,W
0136:  MOVWF  78
0137:  BTFSC  03.2
0138:  GOTO   13D
0139:  BCF    03.0
013A:  RLF    77,F
013B:  DECFSZ 78,F
013C:  GOTO   139
013D:  MOVF   77,W
013E:  XORLW  FF
013F:  ANDWF  06,F
....................          break; 
0140:  GOTO   141
....................          } 
....................       } 
.................... } 
0141:  BCF    0A.3
0142:  BCF    0A.4
0143:  GOTO   17D (RETURN)
....................  
.................... void main(){ 
0144:  CLRF   04
0145:  BCF    03.7
0146:  MOVLW  1F
0147:  ANDWF  03,F
0148:  MOVLW  06
0149:  MOVWF  27
014A:  MOVLW  01
014B:  MOVWF  28
014C:  MOVLW  02
014D:  MOVWF  29
014E:  MOVLW  03
014F:  MOVWF  2A
0150:  MOVLW  04
0151:  MOVWF  2B
0152:  MOVLW  05
0153:  MOVWF  2C
0154:  CLRF   2D
0155:  CLRF   2E
0156:  CLRF   2F
0157:  BSF    03.5
0158:  BSF    1F.0
0159:  BSF    1F.1
015A:  BSF    1F.2
015B:  BCF    1F.3
015C:  MOVLW  07
015D:  MOVWF  1C
....................    enable_interrupts(int_ext); 
015E:  BCF    03.5
015F:  BSF    0B.4
....................    ext_int_edge(L_TO_H); 
0160:  BSF    03.5
0161:  BSF    01.6
....................    enable_interrupts(GLOBAL); 
0162:  MOVLW  C0
0163:  BCF    03.5
0164:  IORWF  0B,F
....................    set_tris_a(0x03); 
0165:  MOVLW  03
0166:  BSF    03.5
0167:  MOVWF  05
....................    set_tris_b(0x81); 
0168:  MOVLW  81
0169:  MOVWF  06
....................    salida=0x00; 
016A:  BCF    03.5
016B:  CLRF   06
....................     
....................    for(;;){ 
....................       if(input(pin_a0)==1){ 
016C:  BTFSS  05.0
016D:  GOTO   178
....................          while(input(pin_a0)==1) 
....................          {} 
016E:  BTFSC  05.0
016F:  GOTO   16E
....................          menus++; 
0170:  INCF   2E,F
....................          if(menus>3){ 
0171:  MOVF   2E,W
0172:  SUBLW  03
0173:  BTFSC  03.0
0174:  GOTO   177
....................             menus=1; 
0175:  MOVLW  01
0176:  MOVWF  2E
....................          } 
....................          menu(); 
0177:  GOTO   03E
....................       } 
....................       if(input(pin_a1)==1){ 
0178:  BTFSS  05.1
0179:  GOTO   17D
....................          while(input(pin_a1)==1) 
....................          {} 
017A:  BTFSC  05.1
017B:  GOTO   17A
....................          seleccion(); 
017C:  GOTO   0C1
....................       } 
....................        
....................    } 
017D:  GOTO   16C
.................... } 
....................  
....................  
017E:  SLEEP

Configuration Fuses:
   Word  1: 3F79   XT NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
